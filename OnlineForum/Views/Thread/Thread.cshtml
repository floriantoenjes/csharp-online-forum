@model OnlineForum.Models.Post

@{
    bool HasSubscription()
    {
        return ViewBag.Thread.Subscribers.Contains(ViewBag.CurrentUser);
    }
}

<div class="container">
    <div class="row">
        <p class="col-3">@Html.ActionLink((string)ViewBag.Thread.Board.Name, "BoardDetail", "Board", new { boardId = ViewBag.Thread.Board.Id })</p>
        <div class="col-6 text-center">
            <h1 class="display-4 mb-4">@ViewBag.Thread.Name</h1>
        </div>
    </div>

    @foreach (var post in ViewBag.posts)
    {
        <article class="d-flex p-4 border my-4">
            <aside class="text-center p-4">
                <p class="col-6">@post.Creator.UserName</p>
                <p>@post.Creator.PostCount Posts</p>
            </aside>
            <div class="w-100">
                <div class="row">
                    <p>@post.CreatedAt</p>
                </div>
                <div class="row">
                    <p class="col-12 p-0">@post.Content</p>
                </div>
                <hr>
                <div class="row">
                    <p>@post.Creator.Signature</p>
                </div>
            </div>
        </article>
    }

    <div class="d-flex mb-4">
        <div class="mr-5">
            <span>Page:</span>
            @foreach (var pageNumber in Enumerable.Range(1, (int)Math.Ceiling(ViewBag.totalPostCount / (double)ViewBag.limit)))
            {
                if (ViewBag.currentPage == pageNumber - 1)
                {
                    @pageNumber
                }
                else
                {
                    @Html.ActionLink((string)pageNumber.ToString(), "thread", "Thread", new { threadId = ViewBag.Thread.Id, page = pageNumber - 1, limit = ViewBag.limit })                    
                }
            }
        </div>

        <div>
            <span>Posts shown:</span>
            @foreach (var postsShown in Enumerable.Range(1, 3))
            {
                if (ViewBag.limit == postsShown * 5)
                {
                    @(postsShown * 5)
                }
                else
                {
                    <span>@Html.ActionLink((string)(postsShown * 5).ToString(), "thread", "Thread", new { threadId = ViewBag.Thread.Id, page = 0, limit = postsShown * 5 })</span>                    
                }
            }
        </div>
    </div>

    @using (Html.BeginForm("CreatePost", "Thread", new { threadId = ViewBag.Thread.Id }))
    {
        <div class="row">
            <div class="col-12 form-group">
                @Html.LabelFor(post => post.Content, new { @class = "control-label" })
                @Html.TextAreaFor(post => post.Content, new { @class = "form-control", @rows = 5 })
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <button class="btn btn-primary mr-4" type="submit">Create Post</button>

                <button id="subscribe-btn" class="btn btn-success" style="display: @(!HasSubscription() ? "" : "none")" onclick="subscribeToThread()" type="button">Subscribe to Thread</button>
                <button id="unsubscribe-btn" class="btn btn-danger" style="display: @(HasSubscription() ? "" : "none")" onclick="unsubscribeFromThread()" type="button">Unsubscribe from Thread</button>
            </div>
        </div>
    }
</div>
<script>
    function subscribeToThread(){
        $.post("@Url.Action("SubscribeToThread", "Thread")" + "?threadId=" + @ViewBag.Thread.Id).done(() => {
            $('#subscribe-btn').hide();
            $('#unsubscribe-btn').show();
        });
    }
    
    function unsubscribeFromThread(){
            $.post("@Url.Action("UnsubscribeFromThread", "Thread")" + "?threadId=" + @ViewBag.Thread.Id).done(() => {
                $('#unsubscribe-btn').hide();
                $('#subscribe-btn').show();
            });
        }
</script>